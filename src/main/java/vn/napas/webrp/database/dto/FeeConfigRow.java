package vn.napas.webrp.database.dto;


import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;

public class FeeConfigRow {
    public String feeNote;
    public String createUser;
    public LocalDate createDate;
    public String modifyUser;
    public LocalDate modifyDate;
    public int issuer;
    public int acquirer;
    public String proCode;
    public int currencyCode;
    public int merchantType;
    public LocalDate validFrom;
    public LocalDate validTo;
    public String feeIssType;
    public BigDecimal feeIss;
    public BigDecimal feeAcq;
    public BigDecimal lowBound;
    public BigDecimal upBound;
    public int orderConfig;
    public BigDecimal feePayAt;
    public BigDecimal feeRecAt;
    public String feeAcqType;
    public String feePayType;
    public String feeRecType;
    public String feeKey;
    public String active;
    public BigDecimal feeIssExt;
    public BigDecimal feeAcqExt;
    public BigDecimal feePayAtExt;
    public BigDecimal feeRecAtExt;
    public BigDecimal feeIrfIss;
    public BigDecimal feeSvfIss;
    public BigDecimal feeIrfAcq;
    public BigDecimal feeSvfAcq;
    public BigDecimal feeIrfPayAt;
    public BigDecimal feeSvfPayAt;
    public BigDecimal feeIrfRecAt;
    public BigDecimal feeSvfRecAt;
    public BigDecimal feeIrfBen;
    public BigDecimal feeSvfBen;
    public String feeBenType;
    public BigDecimal feeBenExt;
    public String feeIssTypeNew;

    public static FeeConfigRow from(ResultSet rs) throws SQLException {
        FeeConfigRow r = new FeeConfigRow();
        r.feeNote       = rs.getString("FEE_NOTE");
        r.createUser    = rs.getString("CREATE_USER");
        r.createDate    = rs.getObject("CREATE_DATE", LocalDate.class);
        r.modifyUser    = rs.getString("MODIFY_USER");
        r.modifyDate    = rs.getObject("MODIFY_DATE", LocalDate.class);
        r.issuer        = rs.getInt("ISSUER");
        r.acquirer      = rs.getInt("ACQUIRER");
        r.proCode       = rs.getString("PRO_CODE");
        r.currencyCode  = rs.getInt("CURRENCY_CODE");
        r.merchantType  = rs.getInt("MERCHANT_TYPE");
        r.validFrom     = rs.getObject("VALID_FROM", LocalDate.class);
        r.validTo       = rs.getObject("VALID_TO", LocalDate.class);
        r.feeIssType    = rs.getString("FEE_ISS_TYPE");
        r.feeIss        = rs.getBigDecimal("FEE_ISS");
        r.feeAcq        = rs.getBigDecimal("FEE_ACQ");
        r.lowBound      = rs.getBigDecimal("LOW_BOUND");
        r.upBound       = rs.getBigDecimal("UP_BOUND");
        r.orderConfig   = rs.getInt("ORDER_CONFIG");
        r.feePayAt      = rs.getBigDecimal("FEE_PAY_AT");
        r.feeRecAt      = rs.getBigDecimal("FEE_REC_AT");
        r.feeAcqType    = rs.getString("FEE_ACQ_TYPE");
        r.feePayType    = rs.getString("FEE_PAY_TYPE");
        r.feeRecType    = rs.getString("FEE_REC_TYPE");
        r.feeKey        = rs.getString("FEE_KEY");
        r.active        = rs.getString("ACTIVE");
        r.feeIssExt     = rs.getBigDecimal("FEE_ISS_EXT");
        r.feeAcqExt     = rs.getBigDecimal("FEE_ACQ_EXT");
        r.feePayAtExt   = rs.getBigDecimal("FEE_PAY_AT_EXT");
        r.feeRecAtExt   = rs.getBigDecimal("FEE_REC_AT_EXT");
        r.feeIrfIss     = rs.getBigDecimal("FEE_IRF_ISS");
        r.feeSvfIss     = rs.getBigDecimal("FEE_SVF_ISS");
        r.feeIrfAcq     = rs.getBigDecimal("FEE_IRF_ACQ");
        r.feeSvfAcq     = rs.getBigDecimal("FEE_SVF_ACQ");
        r.feeIrfPayAt   = rs.getBigDecimal("FEE_IRF_PAY_AT");
        r.feeSvfPayAt   = rs.getBigDecimal("FEE_SVF_PAY_AT");
        r.feeIrfRecAt   = rs.getBigDecimal("FEE_IRF_REC_AT");
        r.feeSvfRecAt   = rs.getBigDecimal("FEE_SVF_REC_AT");
        r.feeIrfBen     = rs.getBigDecimal("FEE_IRF_BEN");
        r.feeSvfBen     = rs.getBigDecimal("FEE_SVF_BEN");
        r.feeBenType    = rs.getString("FEE_BEN_TYPE");
        r.feeBenExt     = rs.getBigDecimal("FEE_BEN_EXT");
        r.feeIssTypeNew = rs.getString("FEE_ISS_TYPE_NEW");
        return r;
    }
}
